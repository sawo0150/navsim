_target_: navsim.planning.utils.multithreading.worker_ray_no_torch.RayDistributedNoTorch
# 즉, build_worker(cfg) 호출 시 Hydra는 이 클래스를 다음과 같이 호출합니다:
# worker = RayDistributedNoTorch(**cfg.worker)

_convert_: 'all'

master_node_ip: null    # Set to a master node IP if you desire to connect to cluster remotely
# 분산 클러스터 환경에서 사용할 마스터 노드 IP.
# 여기선 null → 로컬에서만 실행 (클러스터 연결 안 함).

threads_per_node: null  # Number of CPU threads to use per node, "null" means all threads available
# 한 노드에 사용할 스레드 수.
# null이면 사용 가능한 모든 CPU 코어를 사용함.

debug_mode: false       # If true all tasks will be executed serially, mainly for testing
# true면 실제로는 병렬 처리하지 않고, 순차적으로 실행 → 디버깅용.
# 현재 false → 병렬 실행함.

log_to_driver: true     # If true, all printouts from ray threads will be displayed in driver
# Ray의 worker에서 나오는 출력(log)을 메인 프로세스 콘솔로 전달할지 여부.

logs_subdir: 'logs'     # Subdirectory to store logs inside the experiment directory
# Hydra가 output_dir에 로그를 저장할 때 이 서브디렉토리명을 사용함.
# 전체 로그 경로: ${output_dir}/logs

use_distributed: false  # Whether to use the built-in distributed mode of ray
# 이 설정은 RayDistributedNoTorch 워커가 진짜 분산(distributed) 환경에서 실행될지 아니면 로컬에서만 실행될지를 결정하는 스위치입니다.
# true → Ray 클러스터 (다중 머신) 환경 사용
# false → 현재 머신 하나에서 병렬 처리 (멀티스레딩, 멀티프로세싱)